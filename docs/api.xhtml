<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" version="XHTML+RDFa 1.0" dir="ltr">
<head>
	<meta http-equiv="Content-Type" content="application/xhtml+xml;charset=utf-8"/>
	<meta name="viewport" content="width=device-width, initial-scale=1"/>
	<title>API | URI Template Router</title>
	<link rel="stylesheet" href="style.css"/>
	<link rel="prev" href="usage.xhtml"/>
	<link rel="next" href="demo.xhtml"/>
</head>
<body class="pagewidth">
	<div class="site-header">
		<header>
			<ul>
				<li><h1><a href="index.xhtml">URI Template Router</a></h1></li>
				<li><a href="usage.xhtml">Usage</a></li>
				<li class="active"><a href="api.xhtml">API</a></li>
				<li><a href="demo.xhtml">demo</a></li>
			</ul>
			<ul id="ext-links">
				<li><a href="https://www.npmjs.com/package/uri-template-router">npm</a></li>
				<li><a href="https://yarnpkg.com/package/uri-template-router">Yarn</a></li>
				<li><a href="https://github.com/awwright/uri-template-router">GitHub</a></li>
			</ul>
		</header>
	</div>
	<main>
		<h2>API</h2>

		<section id="api-router">
			<h3>Router</h3>
			<p>Computes a routing table for several Routes and evaluates matches for input URIs.</p>
			<dl>
				<dt><code>clear()</code></dt>
				<dd>Reset the Router to have zero entries.</dd>

				<dt><code>addTemplate(pattern, options, matchValue)</code></dt>
				<dd>Adds a route to the router. Returns the Route object that was inserted. <code>pattern</code> may be a Route object or a URI Template string. Options is passed to the new Route object, if created. The route cannot partially overlap any other route (there cannot be two routes A and B so that one URI matches only A, and  URI matches only B, and some third URI matches both A and B.)</dd>
				
				<dt><code>hasRoute(route)</code></dt>
				<dd>Test if the router has the specified <code>Route</code>.</dd>

				<dt><code>size</code></dt>
				<dd>The number of routes in the Router.</dd>

				<dt><code>getTemplate(uriTemplate)</code></dt>
				<dd>Get the <code>Route</code> in the Router that has the given <code>uriTemplate</code>.</dd>

				<dt><code>hasTemplate(uriTemplate)</code></dt>
				<dd>Test if the router has a <code>Route</code> with the given <code>uriTemplate</code>.</dd>

				<dt><code>getValue(matchValue)</code></dt>
				<dd>Get the <code>Route</code> in the Router that has the given <code>matchValue</code>. This only maps the initial first value of <code>Route#matchValue</code>, it will not update if is changed directly, or if a duplicate value is inserted.</dd>

				<dt><code>hasValue(matchValue)</code></dt>
				<dd>Test if the router has a <code>Route</code> with the given <code>matchValue</code>.</dd>

				<dt><code>resolveURI(uri)</code></dt>
				<dd>Determine if the routing table has a match for <code>uri</code>. Returns a <a href="#api-result"><code>Result</code></a> object with the best match.</dd>
			</dl>
		</section>

		<section id="api-route">
			<h3>Route</h3>
			<p>A <code>Route</code> identifies a single URI Template. It can be inserted into a <code>Router</code>, or can be supplied data to expand into a full URI.</p>
			<dl>
				<dt><code>new Route(uriTemplate, options)</code></dt>
				<dd>
					Options may have the following properties:
					<dl>
						<dt><code>parent</code></dt>
						<dd>Route. Take the intersection of the provided route, which forces this route to be a subset of it.</dd>
						<dt><code>matchValue</code></dt>
						<dd>any. An arbitrary value to associate with this Route, available to the application when this route is selected as a match, or <code>undefined</code> if no match.</dd>
					</dl>
		

				</dd>

				<dt><code>uriTemplate</code></dt>
				<dd>The operator character opening the expression, such as <code>+</code> or <code>?</code>, or an empty string if none.</dd>

				<dt><code>matchValue</code></dt>
				<dd>The operator character opening the expression, such as <code>+</code> or <code>?</code>, or an empty string if none.</dd>

				<dt><code>toString(params)</code></dt>
				<dd>Returns a string of the URI Template, expanded with the given <code>params</code>.</dd>

				<dt><code>resolveURI(uri)</code></dt>
				<dd>Determine if this route is a match for <code>uri</code>. Returns a <a href="#api-result"><code>Result</code></a> object with the match results, or <code>undefined</code> if no match.</dd>
			</dl>
		</section>

		<section id="api-expression">
			<h3>Expression</h3>
			<p>Represents each curly-braced segment in a URI Template. Instances carry the following properties:</p>
			<dl>
				<dt><code>operatorChar</code></dt>
				<dd>The operator character opening the expression, such as <code>+</code> or <code>?</code>, or an empty string if none.</dd>

				<dt><code>prefix</code></dt>
				<dd>The leading character that will be output if one of the variables is defined.</dd>

				<dt><code>separator</code></dt>
				<dd>The character that will separate defined variables in the expression, if there are multiple.</dd>

				<dt><code>range</code></dt>
				<dd>The set of ASCII characters that will pass through without escaping.</dd>

				<dt><code>variableList</code></dt>
				<dd>An Array of <code>Variable</code> instances.</dd>
			</dl>
		</section>

		<section id="api-router">
			<h3>Variable</h3>
			<p>A variable inside an expression. Instances carry the following properties:</p>
			<dl>
				<dt><code>operatorChar</code></dt>
				<dd>The operator character opening the expression the variable is in, such as <code>+</code> or <code>?</code>, or an empty string if none.</dd>

				<dt><code>varname</code></dt>
				<dd>The name of the variable. Does not include the operator or modifiers.</dd>

				<dt><code>explode</code></dt>
				<dd>Boolean indicating the presence of an explode modifier.</dd>

				<dt><code>maxLength</code></dt>
				<dd>A number indicating the value of the "prefix" modifier, if one is supplied.</dd>

				<dt><code>optional</code></dt>
				<dd>A boolean indicating if this variable can be skipped when parsing a URI.</dd>

				<dt><code>prefix</code></dt>
				<dd>The leading character that begins the expression, if one of the variables is defined.</dd>

				<dt><code>separator</code></dt>
				<dd>The character that will separate this variable, if defined, from other defined variables.</dd>

				<dt><code>delimiter</code></dt>
				<dd>Like the separator, but only for characters used to delimit new values during reading.</dd>

				<dt><code>range</code></dt>
				<dd>The set of ASCII characters that will pass through without escaping.</dd>

				<dt><code>named</code></dt>
				<dd>Boolean indicating if the variable name will be printed before the value.</dd>
			</dl>

		</section>
		
		<section id="api-result">
			<h3>Result</h3>
			<p></p>
			<dl>
				<dt><code>router</code></dt>
				<dd>The <code>Router</code> associated with this result.</dd>

				<dt><code>uri</code></dt>
				<dd>The URI that the resolve was called with.</dd>

				<dt><code>options</code></dt>
				<dd>(No function at present.)</dd>

				<dt><code>route</code></dt>
				<dd>The <code>Route</code> that was matched.</dd>

				<dt><code>uriTemplate</code></dt>
				<dd>The URI Template that was matched, shortcut for <code>Result#route.template</code></dd>

				<dt><code>matchValue</code></dt>
				<dd>The <code>matchValue</code> property stored with the Route.</dd>

				<dt><code>params</code></dt>
				<dd>An object of the matched parameters/variables.</dd>
			</dl>
		</section>

	</main>
	<footer>
		<a rel="prev" href="usage.xhtml">Previous: Usage</a>
		<a rel="next" href="demo.xhtml">Next: Demo</a>
	</footer>
</body>
</html>
